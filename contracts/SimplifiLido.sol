// SPDX-License-Identifier: MIT
pragma solidity ^0.8.15;

contract SimplifiLido {
    string public html = "<!DOCTYPE html><html lang='en'> <head> <meta charset='UTF-8'> <meta name='viewport' content='width=device-width, initial-scale=1.0'> <meta http-equiv='X-UA-Compatible' content='ie=edge'> <title>LIDO</title> <style>html{background: #1c232b;}body{font-family: 'Trebuchet MS', Helvetica, sans-serif; color: #CCC; margin: 0px;}button{width: 120px; height: 30px; border: 2px solid #00a3ff; border-radius: 3px; background: #000; color: #CCC; cursor: pointer; margin: 5px;}input[type=text]{width: 180px; height: 24px;}th{border-bottom: 1px solid #444; font-size: 1.1em;}a{color: #CCC;}</style> </head> <body id='top'> <div style='max-width: 95%; margin: 0 auto;'> <div style='display: flex; flex-direction: row; align-items: center; justify-content: center; width: 100%; padding-top: 1%'> <div style='flex: 1 1 auto; text-align: center; font-size: 1.4em;'> <svg width='89' height='20' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path d='M27.172 4.094h2.25v9.656h5.531v2.156h-7.781V4.094zm17.617 0h2.25v11.812h-2.25V4.094zm13.021 0h3.75c.774 0 1.512.162 2.212.487.7.313 1.319.738 1.856 1.275a6.078 6.078 0 0 1 1.275 1.875c.313.713.469 1.469.469 2.269s-.156 1.556-.469 2.269a6.078 6.078 0 0 1-1.275 1.875 6.435 6.435 0 0 1-1.856 1.293c-.7.313-1.438.47-2.212.47h-3.75V4.093zm3.75 9.656c.462 0 .906-.1 1.33-.3.438-.2.82-.469 1.144-.806.338-.338.6-.732.788-1.181.2-.463.3-.95.3-1.463 0-.512-.1-.994-.3-1.444a3.576 3.576 0 0 0-.788-1.2 3.717 3.717 0 0 0-1.143-.806 3.09 3.09 0 0 0-1.331-.3h-1.5v7.5h1.5zM82.558 16a5.56 5.56 0 0 1-2.213-.45 5.978 5.978 0 0 1-1.818-1.275 6.625 6.625 0 0 1-1.238-1.912A6.118 6.118 0 0 1 76.84 10c0-.838.15-1.619.45-2.344a6.304 6.304 0 0 1 1.238-1.912 5.575 5.575 0 0 1 1.818-1.275A5.367 5.367 0 0 1 82.558 4a5.24 5.24 0 0 1 2.194.469c.7.3 1.306.725 1.818 1.275a5.868 5.868 0 0 1 1.238 1.912c.312.725.469 1.506.469 2.344 0 .85-.157 1.637-.47 2.363a6.144 6.144 0 0 1-1.237 1.912 5.689 5.689 0 0 1-1.818 1.275c-.688.3-1.42.45-2.194.45zm0-2.156c.462 0 .906-.094 1.331-.281a3.31 3.31 0 0 0 1.106-.788 4.13 4.13 0 0 0 .75-1.219c.188-.475.282-.993.282-1.556 0-.563-.094-1.075-.282-1.537a3.855 3.855 0 0 0-.75-1.22 3.263 3.263 0 0 0-2.437-1.088 3.333 3.333 0 0 0-1.35.282 3.25 3.25 0 0 0-1.088.807 3.854 3.854 0 0 0-.75 1.219A4.057 4.057 0 0 0 79.09 10c0 .563.093 1.081.28 1.556.188.463.438.869.75 1.219.313.338.675.6 1.088.787a3.3 3.3 0 0 0 1.35.282z'></path><path fill-rule='evenodd' clip-rule='evenodd' d='m7.005 0 4.949 7.748-4.949 2.884-4.948-2.884L7.005 0zM3.572 7.381l3.433-5.376 3.434 5.376-3.434 2.002L3.572 7.38z' fill='#00A3FF'></path><path d='M6.998 12.335 1.258 8.99l-.157.245a6.999 6.999 0 1 0 11.796 0l-.157-.245-5.742 3.346z' fill='#00A3FF'></path></svg> </div><div style='flex: 1 1 auto; text-align: center;'> <span class='mobile-hidden' style='font-size:0.6em;' class='wallet-address'>Rinkeby</span> <button id='connect'>CONNECT</button> </div></div><div id='msg' style='text-align: center; padding: 1% 0; font-size: 1.4em;'> Stake ETH and receive stETH while staking. </div><div id='app' style='margin: 3% auto; padding: 2% 0; border: 1px solid #111; max-width: 820px; background: #34343d;'> <div style='display: flex; flex-direction: row; align-items: center; justify-content: center; max-width: 800px; margin: 0px auto;'> <div style='flex: 1 1 auto; text-align: center;'> <input type='text' id='stake-amount' placeholder='ETH' style='text-align: center;'/> <button id='stake'>STAKE</button> <br><br><input type='text' id='withdraw-amount' placeholder='stETH' style='text-align: center;'/> <button id='withdraw'>WITHDRAW</button> </div><div style='flex: 1 1 auto; text-align: center;'> <div>Availale to stake: <span id='eth-balance'></span></div><div>Staked amount: <span id='steth-balance'></span></div></div></div></div><div style='text-align: left; padding: 1% 0; font-size: 0.9em; margin: 3% auto; max-width: 820px;'> <h4>What is LIDO?</h4> <p>Lido is a liquid staking solution for ETH 2.0 backed by industry-leading staking providers. Lido lets users stake their ETH - without locking assets or maintaining infrastructure - whilst participating in on-chain activities, e.g. lending.</p><p>Our goal is to solve the problems associated with initial ETH 2.0 staking - illiquidity, immovability and accessibility - making staked ETH liquid and allowing for participation with any amount of ETH to improve security of the Ethereum network.</p><p>As part of our continuing efforts to be a force for decentralization, we have published a scorecard for community input and accountability.</p><p>Learn more <a href='https://blog.lido.fi/introducing-lido/' target='_blank'>here</a>.</p></div></div><script src='https://cdn.ethers.io/lib/ethers-5.2.umd.min.js' type='application/javascript'></script> <script>const provider=new ethers.providers.Web3Provider(window.ethereum,'any'); let signer, userAddress, stEth; const stEthABI=[ 'function balanceOf(address) view returns (uint256)', 'function submit(address _referral) external payable returns (uint256 StETH)', 'function withdraw(uint256 _amount, bytes32 _pubkeyHash) external', 'function sharesOf(address _owner) external returns (uint balance)']; const stEthAddress='0xF4242f9d78DB7218Ad72Ee3aE14469DBDE8731eD'; const updateBalances=async ()=>{const ethBalance=await provider.getBalance(userAddress); if (!Number(ethBalance) > 0) document.getElementById('msg').innerHTML=`Get Rinkeby testnet Eth <a href='https://rinkebyfaucet.com/' target='_blank'>here</a>`; document.getElementById('eth-balance').innerHTML=`${Number(ethers.utils.formatEther(ethBalance)).toFixed(5)}<span style='font-size: 0.8em;'>ETH</span>`; const stEthBalance=await stEth.balanceOf(userAddress); document.getElementById('steth-balance').innerHTML=`${Number(ethers.utils.formatEther(stEthBalance)).toFixed(5)}<span style='font-size: 0.8em;'>stETH</span>`;}; const connect=async ()=>{await provider.send('eth_requestAccounts', []); signer=provider.getSigner(); stEth=new ethers.Contract(stEthAddress, stEthABI, signer); userAddress=await signer.getAddress(); const{chainId}=await provider.getNetwork(); if (chainId !==4) alert('Please set your network to Rinkeby Testnet'); document.querySelectorAll('.wallet-address').forEach(el=> el.innerHTML=`${userAddress.substr(0,8)}...`); document.getElementById('connect').innerHTML='CONNECTED'; window.ethereum.on('accountsChanged', ()=>{connect()}); window.ethereum.on('network', ()=>{connect()}); await updateBalances();}; document.getElementById('connect').onclick=connect; document.getElementById('stake').onclick=async ()=>{if (!stEth) await connect(); let userAmount=document.getElementById('stake-amount').value; if (!userAmount) userAmount=prompt('Enter an amount to deposit in ETH'); const weiAmount=ethers.utils.parseEther(userAmount); document.getElementById('stake-amount').value=''; document.getElementById('stake').innerHTML='SENDING TX...'; const tx=await stEth.submit(userAddress,{value: weiAmount}); const receipt=await tx.wait(); document.getElementById('stake').innerHTML='STAKE'; await updateBalances();}; document.getElementById('withdraw').onclick=async ()=>{alert('This functionality will be available post merge when staked tokens are released');}; </script> </body></html>";
}